                    INSTALLING STK++ UNDER UNIX
                    ===========================

This document concerns building and installing STK++ from sources.


As you are reading this file, you have unpacked the stkpp sources
and are presumably in the top directory.

You can install stk++ either using *makefile* or using *cmake*.


== BUILDING USING CMAKE ==

This project uses both the makefile and the cross-platform Make (CMake) build
system. However, we have conveniently provided a wrapper configure script and
makefile so that the typical build invocation of "./configure" followed by
"make" will work.

NOTE: Users of CMake may believe that the top-level "makefile" has been
generated by CMake; It hasn't, so please do not delete that file.

Configure options
-----------------
 
 * By default a debug version of stkpp is created. To create a release version add the option:
   ./configure -DCMAKE_BUILD_TYPE=Release
   To go back to a debug version:
   ./configure -DCMAKE_BUILD_TYPE=Debug

 * stkpp options:
   ./configure -DZERO_BASED_ARRAYS=OFF : the first index of the arrays will start at 1 (0 is the default)
   ./configure -DREAL_ARE_FLOAT=ON : will use float rather than double as real representation

example: build a Release version with 1 based Arrays
-------
./configure -DZERO_BASED_ARRAYS=OFF -DCMAKE_BUILD_TYPE=Release
make
make cdoc
make ctest

clean
-----
make cclean


== BUILDING USING MAKE ==

check the macros in the file:
----------------------------

  makevars

In particular:
 * If you don't have the Rmath library installed on your computer, set HASRMATH = f
 * If you have lapack installed on your system, set STK_CXXFLAGS += -DSTKUSELAPACK
 

Issue the following command
---------------------------

	make all
	
You will get a the static library libSTKpp.a in the lib/ directory. This library
can be linked with your own application.

if you want to make the test programs, issue the following command:
-------------------------------------------------------------------

make all_tests

if you want to make the manual, issue the following command:
------------------------------------------------------------

	doxygen Doxyfile

The documentation can be browse in the directory doc/html.

Linking to stkpp:
-----------------

The directory lib/ contain the library libSTKpp.a. You can also include
all the headers using the directive
#include "stkpp/include/STKpp.h"

You can also, at your convenience, add only the headers of the projects you
need to use.

Almost of the class in STK++ are templated thus, use the same macro in your
project. In particular use the flag -DSTKBASEARRAYS=1 if you disable
the ZERO_BASE_ARRAY option and -DSTKREALAREFLOAT if you compile stk++ in float.

In order to compile properly your application with stk++, you also will have to
give the path of the stkpp/projects directory. Here is an example, assuming the
stkpp main directory is two levels up:

#############################################################
# part of a makefile compiling target using stk++ library
include ../../stkpp/makevars

STKPP_DIR = ../../stkpp/
STKPP_LIB = ../../stkpp/lib/libSTKpp.a
STKPP_INC = $(STKPP_DIR)include/
STKPP_PROJECTS = $(STKPP_DIR)projects/

target.o: target.cpp 
  $(CXX) $(CXXFLAGS) $(STK_CXXFLAGS) -I$(STKPP_INC) -I$(STKPP_PROJECTS) $< -c -o $@
target: target.o
  $(CXX)  $< $(LDFLAGS) $(CXX_OBJS) $(STKPP_LIB) $(LDLIBS) -o $@ 
##############################################################
 
== PREREQUISITIES ==

STK++ needs a recent C++ compiler (gcc 4.3 or higher) 

If you want to compare the special functions implemented in STK++ with
the R math functions (e.g. to compile the testAnalysis program), you need
to install or compile the libRmath.a library and give the path to this library
in the makevars file.

== CONTACT ==

serge _ dot_ iovleff _arobase_ stkpp _dot_ org
