Prerequisites, all platforms
---

R must be installed, along with the following packages from the CRAN: Rcpp RInside truncnorm shape.

The C++ library Boost is required, but is too big to be provided in the git repository. It must be downloaded from http://www.boost.org/ as an archive, and its content must be extracted in the boost subdirectory. The project directories hierarchy will then look like:

boost
  boost
  doc
  libs
  more
  status
  tools
eigen
gtest
MixtComp
RMixtComp

Prerequisites, OSX
---

The developper tools must be installed, by typing "xcode-select --install" in a terminal. This will provide a C++ compiler and a build toolchain.

Build and install
---

After the initial "git --clone", or after any update via "git pull" for example, the code must be rebuilt. To handle the various dependencies correctly, is is necessary to rebuild MixtComp by calling "./mcUpdate.sh" which is in the same directory as this present document. The script will clean just enough location to ensure a proper build without taking too long to complete.

Test in RStudio
---

Launch R by loading the RStudio project. Press CRTL + SHIFT + B to build and load the package. Test the various modes using:
out <- testGenDataLearn()
out <- testLeanPredict()
out <- testNewLearn()
out <- testNewLearnPredict()

The input and output files are generated in the dataGen (simple models) and dataGenNew (advanced models) directories. testGenDataLearn and testLeanPredict correspond to learning and the combination of learning and prediction for the simple models (normal, multinomial, Poisson). testNewLearn and testNewLearnPredict are the same, but for the more advanced models (rank, functional, ordinal).
