% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JsonMixtComp.R
\name{JsonMixtCompCluster}
\alias{JsonMixtCompCluster}
\alias{JsonMixtCompPredict}
\title{Learn and predict using RJsonMixtComp}
\usage{
JsonMixtCompCluster(dataList, mcStrategy, nbClass, confidenceLevel, jsonInputFile,
                    jsonOutputFile)
JsonMixtCompPredict(dataList, mcStrategy, nbClass, confidenceLevel, jsonInputFile, 
                    jsonOutputFile, jsonMixtCompLearnFile)
}
\arguments{
\item{dataList}{\emph{lm} output of \link{getData} function.}

\item{mcStrategy}{a list containing the parameters of the SEM-Gibbs algorithm (see \emph{Details}).}

\item{nbClass}{the number of class of the mixture model.}

\item{confidenceLevel}{quantile for confidence interval of estimated parameters.}

\item{jsonInputFile}{path of the input json file to save.}

\item{jsonOutputFile}{path of the output json file to save.}

\item{jsonMixtCompLearnFile}{(only for JsonMixtCompPredict) path of the output json file of JsonMixtCompLearn function.}
}
\value{
A json file and a R list containing 3 lists :
\describe{
 \item{strategy}{a copy of \emph{mcStrategy} parameter.}
 \item{mixture}{information about the mixture (see \emph{Details}).}
 \item{variable}{information about the estimated parameters (see \emph{Details}).}
}
}
\description{
Estimate the parameter of a mixture model or predict the cluster of new samples.
}
\details{
Details about the output object of \emph{mixtCompCluster} and \emph{mixtCompPredict} functions.
}
\examples{
\dontrun{
# load the data
resGetData <- getData(c("dataTrain.csv", "descriptor.csv")) 
resGetNewData <- getData(c("dataTest.csv", "descriptor.csv")) 

# define the algorithm's parameters
mcStrategy <- list(nbBurnInIter = 100,
                   nbIter = 100,
                   nbGibbsBurnInIter = 50,
                   nbGibbsIter = 50,
                   parameterEdgeAuthorized = FALSE)

# run RMJsonixtCompt for clustering
res <- JsonMixtCompCluster(resGetData$lm, mcStrategy, nbClass = 2, confidenceLevel = 0.95)

# run RJsonMixtCompt for predicting
resPred <- JsonMixtCompCluster(resGetNewData$lm, res$variable$param, mcStrategy, nbClass = 2,
                               confidenceLevel = 0.95)
}


}
\seealso{
\link{getData}
}
