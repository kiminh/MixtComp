// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// mixtCompCluster
Rcpp::List mixtCompCluster(Rcpp::List dataList, Rcpp::List mcStrategy, int nbClass, double confidenceLevel);
RcppExport SEXP _RMixtComp_mixtCompCluster(SEXP dataListSEXP, SEXP mcStrategySEXP, SEXP nbClassSEXP, SEXP confidenceLevelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type dataList(dataListSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type mcStrategy(mcStrategySEXP);
    Rcpp::traits::input_parameter< int >::type nbClass(nbClassSEXP);
    Rcpp::traits::input_parameter< double >::type confidenceLevel(confidenceLevelSEXP);
    rcpp_result_gen = Rcpp::wrap(mixtCompCluster(dataList, mcStrategy, nbClass, confidenceLevel));
    return rcpp_result_gen;
END_RCPP
}
// mixtCompPredict
Rcpp::List mixtCompPredict(Rcpp::List dataList, Rcpp::List paramList, Rcpp::List mcStrategy, int nbClass, double confidenceLevel);
RcppExport SEXP _RMixtComp_mixtCompPredict(SEXP dataListSEXP, SEXP paramListSEXP, SEXP mcStrategySEXP, SEXP nbClassSEXP, SEXP confidenceLevelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type dataList(dataListSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type paramList(paramListSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type mcStrategy(mcStrategySEXP);
    Rcpp::traits::input_parameter< int >::type nbClass(nbClassSEXP);
    Rcpp::traits::input_parameter< double >::type confidenceLevel(confidenceLevelSEXP);
    rcpp_result_gen = Rcpp::wrap(mixtCompPredict(dataList, paramList, mcStrategy, nbClass, confidenceLevel));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RMixtComp_mixtCompCluster", (DL_FUNC) &_RMixtComp_mixtCompCluster, 4},
    {"_RMixtComp_mixtCompPredict", (DL_FUNC) &_RMixtComp_mixtCompPredict, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_RMixtComp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
