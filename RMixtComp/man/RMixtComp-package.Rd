% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RMixtComp-package.R
\docType{package}
\name{RMixtComp-package}
\alias{RMixtComp-package}
\title{RMixtComp}
\description{
Mixture Composer is a project to build mixture models with heterogeneous data
sets. The conditional independence property enables composing all the
data sets in a single mixture model.
}
\details{
Main functions are \link{mixtCompLearn} for clustering, \link{mixtCompPredict} for predict the cluster of new samples with a model learned with \link{mixtCompLearn}. 
\link{createAlgo} gives you default values for required parameters.

Read the help page of \link{mixtCompLearn} for available models and data format. A summary of these information can be accessed with the function \link{availableModels}.

Getters are available to easily access some results (see. \link{mixtCompLearn} for output format): \link{getBIC}, \link{getICL}, \link{getCompletedData}, \link{getParam},
 \link{getTik}, \link{getEmpiricTik}, \link{getPartition}, \link{getType}, \link{getModel}, \link{getVarNames}.

Datasets are provided and contains examples: \link{simData}, \link{titanic}, \link{CanadianWeather}, \link{prostate}.

You can compute discriminative powers and similarities with functions: \link{computeDiscrimPowerClass}, \link{computeDiscrimPowerVar}, \link{computeSimilarityClass}, \link{computeSimilarityVar}.

Graphics functions are \link{plot.MixtComp}, \link{plot.MixtCompLearn}, \link{heatmapClass}, \link{heatmapTikSorted}, \link{heatmapVar}, \link{histMisclassif}, \link{plotConvergence}, 
\link{plotDataBoxplot}, \link{plotDataCI}, \link{plotDiscrimClass}, \link{plotDiscrimVar}, \link{plotProportion}, \link{plotCrit}.
}
\examples{
\donttest{
data(simData)
 
# define the algorithm's parameters
algo <- list(nbBurnInIter = 100,
             nbIter = 100,
             nbGibbsBurnInIter = 50,
             nbGibbsIter = 50,
             nInitPerClass = 10,
             nSemTry = 20,
             confidenceLevel = 0.95)

# run RMixtCompt for clustering
resLearn <- mixtCompLearn(simData$dataLearn$matrix, simData$model$unsupervised, algo, nClass = 2:4)

# run RMixtCompt for predicting
resPred <- mixtCompPredict(simData$dataPredict$matrix, simData$model$unsupervised, algo, resLearn)

}

}
\seealso{
\code{\link{mixtCompLearn}} \code{\link{availableModels}}. Other clustering packages : \code{Rmixmod}, \code{blockcluster}
}
\keyword{package}
