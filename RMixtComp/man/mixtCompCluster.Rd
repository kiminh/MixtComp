% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RMixtComp-package.R
\name{mixtCompCluster}
\alias{mixtCompCluster}
\alias{mixtCompPredict}
\title{Learn and predict using RMixtComp}
\usage{
mixtCompCluster(dataList, mcStrategy, nbClass, confidenceLevel)
mixtCompPredict(dataList, paramList, mcStrategy, nbClass, confidenceLevel)
}
\arguments{
\item{dataList}{\emph{lm} element of the output of \link{getData}.}

\item{paramList}{parameters of the mixture model (only for \emph{mixtCompPredict} function). Output \emph{$variable$param} from \emph{mixtCompCluster} function.}

\item{mcStrategy}{a list containing the parameters of the SEM-Gibbs algorithm (see \emph{Details}).}

\item{nbClass}{the number of class of the mixture model.}

\item{confidenceLevel}{level of confidence for interval of estimated parameters.}
}
\value{
A list containing 3 lists :
\describe{
 \item{strategy}{a copy of \emph{mcStrategy} parameter.}
 \item{mixture}{information about the mixture.}
 \item{variable}{infoRmation about the estimated parameters (see \emph{Details}).}
}
}
\description{
Estimate the parameter of a mixture model or predict the cluster of new samples.
}
\details{
#' 
\emph{mcStrategy} is a list containing the different number of iterations for the algorithm. 
The algorithm is decomposed in a burn-in phase and a normal phase. 
Estimates from the burn-in phase are not shown in output.
\describe{
  \item{nbBurnInIter}{Number of iterations of the burn-in part of the SEM algorithm.}
  \item{nbIter}{Number of iterations of the SEM algorithm.}
  \item{nbGibbsBurnInIter}{Number of iterations of the burn-in part of the Gibbs algorithm.}
  \item{nbGibbsIter}{Number of iterations of the Gibbs algorithm.}
  \item{parameterEdgeAuthorized}{\emph{TRUE} or \emph{FALSE} (default value). 
  If \emph{TRUE}, a bias is introduced by avoiding some non stable situation (a proportion = 0 for example) by using a minimal value (1e-8).
  Using \emph{parameterEdgeAuthorized=TRUE} can significantly reduce the computation time. }
}



The output list \emph{mixture} contains the \emph{BIC}, \emph{ICL}, number of samples (\emph{nbSample} or \emph{nbInd}),
the number of class (\emph{nCluster}), the observed loglikelihood (\emph{lnObservedLikelihood}),
the completed loglikelihood (\emph{lnCompletedLikelihood}), the number of free parameters of the mixture (\emph{nbFreeParameters}),
the function used to create the output (\emph{mode} = "learn" for \link{mixtCompCluster} or "predict" for \link{mixtCompPredict}),
something mathematic \emph{IdClass}, the execution time \emph{runTime} and the warnings generated \emph{warnlog}.


The output list \emph{variable}
}
\examples{
\dontrun{
# load the data
resGetData <- getData(c("dataTrain.csv", "descriptor.csv")) 
resGetNewData <- getData(c("dataTest.csv", "descriptor.csv")) 

# define the algorithm's parameters
mcStrategy <- list(nbBurnInIter = 100,
nbIter = 100,
nbGibbsBurnInIter = 50,
nbGibbsIter = 50,
parameterEdgeAuthorized = FALSE)

# run RMixtCompt for clustering
res <- mixtCompCluster(resGetData$lm, mcStrategy, nbClass = 2, confidenceLevel = 0.95)

# run RMixtCompt for predicting
resPred <- mixtCompCluster(resGetNewData$lm, res$variable$param, mcStrategy, nbClass = 2, confidenceLevel = 0.95)
}



}
\author{
Vincent Kubicki
}
\seealso{
\link{getData}
}

